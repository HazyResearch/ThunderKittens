<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="test__build__utils_8py" kind="file" language="Python">
    <compoundname>test_build_utils.py</compoundname>
    <innernamespace refid="namespacepyutils_1_1test__build__utils">pyutils::test_build_utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>torch.utils.cpp_extension<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>setuptools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>setup</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>torch.utils.cpp_extension<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BuildExtension,<sp/>CUDAExtension</highlight></codeline>
<codeline lineno="5"><highlight class="normal">tile<sp/>=<sp/>16</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="13"><highlight class="normal">project_root<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&quot;THUNDERKITTENS_ROOT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>project_root<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>project<sp/>root<sp/>set<sp/>(env:<sp/>thunderkittens_root)<sp/>did<sp/>you<sp/>run<sp/>env.src?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>os._exit(-1)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_sources(name):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[f</highlight><highlight class="stringliteral">&quot;{name}_frontend.cpp&quot;</highlight><highlight class="normal">,<sp/>f</highlight><highlight class="stringliteral">&quot;{name}.cu&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">jit_build(name,<sp/>debug=False):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>_cuda_flags<sp/><sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;-U__CUDA_NO_HALF_OPERATORS__&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-U__CUDA_NO_HALF_CONVERSIONS__&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-arch=native&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--generate-line-info&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--restrict&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;-I<sp/>{project_root}&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>if(debug):<sp/>_cuda_flags<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;-D__DEBUG_PRINT&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-g&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-G&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-D<sp/>TORCH_USE_CUDA_DSA&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>load(name=f</highlight><highlight class="stringliteral">&quot;{name}&quot;</highlight><highlight class="normal">,<sp/>sources=_sources(name),<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_cflags=[],</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_cuda_cflags=_cuda_flags)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">cuda_extension(name,<sp/>debug):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>_cuda_flags<sp/><sp/>=<sp/>[</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;-U__CUDA_NO_HALF_OPERATORS__&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-U__CUDA_NO_HALF_CONVERSIONS__&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;-use_fast_math&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;-arch=native&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--generate-line-info&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--restrict&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-std=c++20&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;-I<sp/>{project_root}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>if(debug):<sp/>_cuda_flags<sp/>+=<sp/>[</highlight><highlight class="stringliteral">&apos;-D__DEBUG_PRINT&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-g&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-G&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CUDAExtension(f</highlight><highlight class="stringliteral">&apos;{name}&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources=_sources(name),<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_compile_args={</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal"><sp/>:<sp/>[</highlight><highlight class="stringliteral">&apos;-std=c++20&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;nvcc&apos;</highlight><highlight class="normal"><sp/>:<sp/>[</highlight><highlight class="stringliteral">&apos;-O3&apos;</highlight><highlight class="normal">]<sp/>+<sp/>_cuda_flags})</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">library_build(name,<sp/>debug=False):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>setup(name=f</highlight><highlight class="stringliteral">&quot;{name}&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext_modules=[cuda_extension(name)],<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdclass={</highlight><highlight class="stringliteral">&apos;build_ext&apos;</highlight><highlight class="normal">:<sp/>BuildExtension})</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__eq(str,<sp/>x,y,<sp/>tol=1e-5,<sp/>debug=False):<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>torch.abs(x-y).max()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>pass_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>err<sp/>&lt;<sp/>tol<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;fail&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{str}<sp/>:<sp/>{pass_str}<sp/>[err={err:0.5f}]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>if(debug<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(err<sp/>&gt;<sp/>tol)):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;x\n{x}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;y\n{y}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;diff\n{x-y}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err<sp/>&lt;=<sp/>tol</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_rtile(b,n,d,dt):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.randn(b,n,d,device=</highlight><highlight class="stringliteral">&apos;cuda&apos;</highlight><highlight class="normal">,<sp/>dtype=dt)/(n*d)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_rhtile(b,h,n,d,dt):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.randn(b,h,n,d,device=</highlight><highlight class="stringliteral">&apos;cuda&apos;</highlight><highlight class="normal">,<sp/>dtype=dt)/(n*d)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_rones(b,n,d,dt):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.ones(b,n,d,device=</highlight><highlight class="stringliteral">&apos;cuda&apos;</highlight><highlight class="normal">,<sp/>dtype=dt)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">print_tiles(str,<sp/>t):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(t.size(0)):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(t.size(1)//tile):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{str}<sp/>TILE<sp/>batch={i}<sp/>tile={j}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{t[i,j*tile:(j+1)*tile,:]}&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="src/common/pyutils/test_build_utils.py"/>
  </compounddef>
</doxygen>
