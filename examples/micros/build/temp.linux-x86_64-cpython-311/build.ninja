ninja_required_version = 1.3
cxx = c++
nvcc = /usr/local/cuda-12.5/bin/nvcc

cflags = -pthread -B /home/ubuntu/miniconda3/compiler_compat -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/ubuntu/miniconda3/include -fPIC -O2 -isystem /home/ubuntu/miniconda3/include -fPIC -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include/torch/csrc/api/include -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include/TH -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include/THC -I/usr/local/cuda-12.5/include -I/home/ubuntu/miniconda3/include/python3.11 -c
post_cflags = -std=c++20 -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE="_gcc"' '-DPYBIND11_STDLIB="_libstdcpp"' '-DPYBIND11_BUILD_ABI="_cxxabi1011"' -DTORCH_EXTENSION_NAME=micro -D_GLIBCXX_USE_CXX11_ABI=0
cuda_cflags = -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include/torch/csrc/api/include -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include/TH -I/home/ubuntu/miniconda3/lib/python3.11/site-packages/torch/include/THC -I/usr/local/cuda-12.5/include -I/home/ubuntu/miniconda3/include/python3.11 -c
cuda_post_cflags = -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options ''"'"'-fPIC'"'"'' -O3 --use_fast_math --generate-line-info --restrict -std=c++20 --expt-relaxed-constexpr --expt-extended-lambda -Xcompiler=-fno-strict-aliasing -MD -MT -MF -x cu -lrt -lpthread -ldl -lcuda -lcudadevrt -lcudart_static -lcublas '-I /home/ubuntu/xinhaoli/ThunderKittens' -arch=sm_80 -DKITTENS_A100 -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE="_gcc"' '-DPYBIND11_STDLIB="_libstdcpp"' '-DPYBIND11_BUILD_ABI="_cxxabi1011"' -DTORCH_EXTENSION_NAME=micro -D_GLIBCXX_USE_CXX11_ABI=0
cuda_dlink_post_cflags = 
ldflags = 

rule compile
  command = $cxx -MMD -MF $out.d $cflags -c $in -o $out $post_cflags
  depfile = $out.d
  deps = gcc

rule cuda_compile
  depfile = $out.d
  deps = gcc
  command = $nvcc --generate-dependencies-with-compile --dependency-output $out.d $cuda_cflags -c $in -o $out $cuda_post_cflags





build /home/ubuntu/xinhaoli/ThunderKittens/examples/micros/build/temp.linux-x86_64-cpython-311/micro.o: cuda_compile /home/ubuntu/xinhaoli/ThunderKittens/examples/micros/micro.cu
build /home/ubuntu/xinhaoli/ThunderKittens/examples/micros/build/temp.linux-x86_64-cpython-311/micro_frontend.o: compile /home/ubuntu/xinhaoli/ThunderKittens/examples/micros/micro_frontend.cpp






